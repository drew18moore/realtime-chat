// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                   Int                @id @default(autoincrement())
  display_name         String
  username             String             @unique
  password             String
  created_at           DateTime           @default(now())
  updated_at           DateTime           @updatedAt
  createdMessages      Message[]          @relation("sentMessages")
  receivedMessages     Message[]          @relation("receivedMessages")
  conversations        ConversationUser[]
  refresh_token        String             @default("")
  profile_picture      String             @default("")
}

model Message {
  id             Int           @id @default(autoincrement())
  message        String
  to             User          @relation("sentMessages", fields: [receiverId], references: [id])
  receiverId     Int
  from           User          @relation("receivedMessages", fields: [authorId], references: [id])
  authorId       Int
  created_at     DateTime      @default(now())
  conversation   Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId Int?
}

model Conversation {
  id              Int                @id @default(autoincrement())
  title           String?
  messages        Message[]
  created_at      DateTime           @default(now())
  dateLastMessage DateTime?
  participants    ConversationUser[]
}

model ConversationUser {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  isRead         Boolean      @default(false)
}
